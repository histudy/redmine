- name: Deploy Redmine
  hosts: redmine
  pre_tasks:
    - name: rcloneのインストール
      ansible.builtin.apt:
        name: rclone
    - name: rcloneの設定を生成
      ansible.builtin.command:
        cmd: |
          rclone config create sakura_cloud s3 \
          provider=Other \
          access_key_id={{ lookup('env', 'OBJECT_STORAGE_ACCESS_KEY_ID') }} \
          secret_access_key={{ lookup('env', 'OBJECT_STORAGE_SECRET_ACCESS_KEY') }} \
          region={{ lookup('env', 'OBJECT_STORAGE_REGION') }} \
          endpoint=={{ lookup('env', 'OBJECT_STORAGE_ENDPOINT') }} \
          acl=private \
          bucket_acl=private
        creates: ~/.config/rclone/rclone.conf
    - name: オブジェクトストレージからバックアップファイルファイルを取得し所定のパスに保存
      ansible.builtin.command: 
        cmd: rclone copy sakura_cloud:{{ lookup('env', 'OBJECT_STORAGE_BUCKET') }}{{ item.src }} {{ item.dest }}
        creates: "{{ redmine_home }}/config/initializers/secret_token.rb"
      loop:
        - src: /redmine/backup/database_dump.sql.gz
          dest: "{{ redmine_restore_database_dump_file }}"
        - src: /redmine/backup/files.tar.gz
          dest: "{{ redmine_restore_files_archive_file }}"
  roles:
    - role: common
    - role: nginx
    - role: dehydrated
    - role: redmine
  tasks: []
  post_tasks:
    - name: リストアに利用したファイルを削除
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop:
        - "{{ redmine_restore_files_archive_file }}"
        - "{{ redmine_restore_database_dump_file }}"

    
